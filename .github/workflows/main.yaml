name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Secret scanning
        uses: gregorriegler/github-action-secrets-scanner@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ignorePatterns: '["**/*.pem","**/*.crt","**/*.key"]'
        if: github.event_name == 'push'  # Run only on push events

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        env:
          DOCKER_TAG: ${{ github.run_number }}  # Semantic versioning for Docker build

      - name: Run unit tests
        run: mvn test
        env:
          UNIT_TEST_PASS_PERCENT: 80  # Set the unit test pass percentage threshold

      - name: SAST (Static Application Security Testing)
        uses: securecodewarrior/sca-sast-github-action@v2
        with:
          scan_name: 'Spring Boot SAST'
          scan_file_path: 'target/*.jar'
          scan_type: 'jar'
          fail_on_severity: 'High'
        if: success()  # Run only if the build is successful

      - name: Dockerize
        run: |
          docker build -t my-spring-app:${DOCKER_TAG} .
          docker tag my-spring-app:${DOCKER_TAG} 804677980227.dkr.ecr.us-east-1.amazonaws.com/demo-rbk:${DOCKER_TAG}

      - name: Push Docker image to Amazon ECR
        run: docker push 804677980227.dkr.ecr.us-east-1.amazonaws.com/demo-rbk:${DOCKER_TAG}

      - name: Docker scanning
        uses: docker-scan-action@v1
        with:
          image: 804677980227.dkr.ecr.us-east-1.amazonaws.com/demo-rbk:${DOCKER_TAG}
          scan-result-file: 'docker-scan-result.json'
        if: success()  # Run only if the build is successful

      - name: Kubernetes manifest scanning
        uses: aquasecurity/kube-scan@v0.4.0
        with:
          output_format: 'json'
          output_file: 'kube-scan-result.json'
          kubeconfig: ${{ secrets.KUBECONFIG }}
        if: success()  # Run only if the build is successful
      
      - name: Upload scan results to S3
        env:
          AWS_REGION: "us-east-1"
          AWS_BUCKET_NAME: 'iac-pipeline-backend'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
              aws s3 cp docker-scan-result.json s3://$AWS_BUCKET_NAME/
              aws s3 cp kube-scan-result.json s3://$AWS_BUCKET_NAME/
          

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Install kubectl and Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-west-2'

      - name: Deploy with ArgoCD
        run: |
          argocd app create my-spring-app \
            --repo https://github.com/naveen2314/rak-demo \
            --path ./kubernetes \
            --dest-server https://kubernetes.default.svc \
            --dest-namespace rak-sample \
            --sync-policy auto \
            --auto-prune
